/** @page Architecture %Kompas architecture overview

@todo What to keep in main window and what make with plugins
@todo Mainwindow the same for desktop and mobile, differentiated only by plugins?
@todo More view instances using tool plugins?
@todo Planet position managed with celestial bodies asking timeline or route
      planner asking timeline and placing celestial bodies?
@todo GPS position - as separate plugin or via an custom vector model with
      layers such as "current position only", "recorded path" etc.?
@todo Route planner simply as vector model with special presenters? It basically
      just provides an vector path, which can be displayed either visually on
      the map, or as another layer as list of routes in a widget or in
      connection with GPS and timeline as voice commands? But it must have any
      input (from, to, road type, speed/efficiency, etc.) and it just doesn't
      work for planets.

Here's a graph explaining complete %Kompas Qt GUI architecture. View also @subpage ArchitectureLegend "legend" explaining nodes and edges. All nodes except plugins are clickable.

@dot
strict digraph architecture {
    fontname=Helvetica;
    fontsize=8;
    fontcolor="#666666";
    style=dashed;
    color="#999999";
    node [fontname=Helvetica, fontsize=8, height=0.25, style=filled];
    edge [fontname=Helvetica, fontsize=8, fontcolor="#996600"];

    // Qt nodes

    node [color="#66cc33", fillcolor="#ccffcc", fontcolor="#006600"];
    mainWindow [label="Main\nwindow", href="@ref Kompas::QtGui::MainWindow"];
    dataDownloadThread [label="Data downloading\nthread", href="@ref Kompas::QtGui::TileDataThread"];

    node [shape=record];
    toolInterface [label="Tool\ninterface", href="@ref Kompas::QtGui::AbstractTool"];
    mapViewInterface [label="Map view\ninterface", href="@ref Kompas::QtGui::AbstractMapView"];

    // Core nodes

    node [color="#6633cc", fillcolor="#ccccff", fontcolor="#000066", shape=ellipse];
    configuration [label="Configuration", href="@ref Kompas::Utility::Configuration"];
    timeline [label="Time line", href="@ref Kompas::Core::TimeLine"];

    node [shape=record];
    cacheInterface [label="Cache\ninterface", href="@ref Kompas::Core::AbstractCache"];

    // Plugins

    node [shape=circle, style=filled, color="#cc9900", fillcolor="#ffff66", fontcolor="#996600", fixedsize=true, width=0.75, height=0.75 ];
    cachePlugin [label="Caching\nplugins"];
    mapViewPlugin [label="Map view\nplugins"];
    toolPlugin [label="Tool\nplugins"];

    // Plugin managers

    subgraph cluster_pluginManagers {
        label="Plugin manager store";
        href="@ref Kompas::QtGui::PluginManagerStore";
        node [fontname=Helvetica, fontsize=8, height=0.25, style=filled, fixedsize=false];

        node [color="#66cc33", fillcolor="#ccffcc", fontcolor="#006600", shape=ellipse];
        qtPluginManager [label="Qt plugin\nmanager", href="@ref Kompas::QtGui::PluginManager"];

        node [shape=note];
        pluginModel [label="Plugin\nmodel", href="@ref Kompas::QtGui::PluginModel"];

        node [color="#6633cc", fillcolor="#ccccff", fontcolor="#000066", shape=ellipse];
        pluginManager [label="Plugin\nmanager", href="@ref Kompas::PluginManager::PluginManager"];
    }

    // Celestial bodies

    subgraph cluster_celestialBody {
        label="Celestial body store";
        href="@ref Kompas::QtGui::CelestialBodyStore";
        node [fontname=Helvetica, fontsize=8, height=0.25, style=filled, fixedsize=false];

        node [color="#6633cc", fillcolor="#ccccff", fontcolor="#000066", shape=record];
        celestialBodyInterface [label="Celestial\nbody interface", href="@ref Kompas::Core::AbstractCelestialBody"];

        node [shape=circle, color="#cc9900", fillcolor="#ffff66", fontcolor="#996600", fixedsize=true, width=0.75, height=0.75 ];
        celestialBodyPlugin [label="Celestial\nbody plugin"];

        // Raster models

        subgraph cluster_rasterModel {
            label="Raster model store";
            href="@ref Kompas::QtGui::RasterModelStore";
            node [fontname=Helvetica, fontsize=8, height=0.25, style=filled, fixedsize=false];

            node [color="#66cc33", fillcolor="#ccffcc", fontcolor="#006600", shape=note];
            rasterZoomModel [label="Zoom\nmodel", href="@ref Kompas::QtGui::RasterZoomModel"];
            rasterLayerModel [label="Layer\nmodel", href="@ref Kompas::QtGui::RasterLayerModel"];
            rasterOverlayModel [label="Overlay\nmodel", href="@ref Kompas::QtGui::RasterOverlayModel"];

            node [color="#6633cc", fillcolor="#ccccff", fontcolor="#000066", shape=record];
            projectionInterface [label="Projection\ninterface", href="@ref Kompas::Core::AbstractProjection"];
            rasterModelInterface [label="Raster model\ninterface", href="@ref Kompas::Core::AbstractRasterModel"];

            node [shape=circle, color="#cc9900", fillcolor="#ffff66", fontcolor="#996600", fixedsize=true, width=0.75, height=0.75 ];
            projectionPlugin [label="Projection\nplugin"];
            rasterModelPlugin [label="Raster\nmodel\nplugin"];

            edge [color="#000000"];
            rasterZoomModel -> rasterModelInterface;
            rasterLayerModel -> rasterModelInterface [weight=20];
            rasterOverlayModel -> rasterModelInterface;

            edge [style=solid, color="#cc9900"];
            projectionInterface -> projectionPlugin;
            rasterModelInterface -> rasterModelPlugin;

            edge [style=dashed, color="#ffcc00"];
            rasterModelPlugin -> projectionPlugin;
        }

        // Vector models

        subgraph cluster_vectorModel {
            label="Vector model store";
            href="@ref Kompas::QtGui::VectorModelStore";
            node [fontname=Helvetica, fontsize=8, height=0.25, style=filled, fixedsize=false];

            node [color="#66cc33", fillcolor="#ccffcc", fontcolor="#006600", shape=note];
            vectorLayerModel [label="Layer\nmodel", href="@ref Kompas::QtGui::VectorLayerModel"];

            node [color="#6633cc", fillcolor="#ccccff", fontcolor="#000066", shape=record];
            vectorModelInterface [label="Vector model\ninterface", href="@ref Kompas::Core::AbstractVectorInterface"];

            node [shape=circle, color="#cc9900", fillcolor="#ffff66", fontcolor="#996600", fixedsize=true, width=0.75, height=0.75 ];
            vectorModelPlugin [label="Vector\nmodel\nplugin"];

            edge [color="#000000"];
            vectorLayerModel -> vectorModelInterface;

            edge [style=solid, color="#cc9900"];
            vectorModelInterface -> vectorModelPlugin;
        }

        edge [style=solid, color="#cc9900"];
        celestialBodyInterface -> celestialBodyPlugin;

        edge [style=dashed, color="#ffcc00"];
        rasterModelPlugin -> celestialBodyPlugin;
        vectorModelPlugin -> celestialBodyPlugin;
    }

    // Vector presenters

    subgraph cluster_vectorPresenter {
        label="Vector presenter store";
        node [fontname=Helvetica, fontsize=8, height=0.25, style=filled, fixedsize=false];

        node [color="#6633cc", fillcolor="#ccccff", fontcolor="#000066", shape=record];
        vectorPresenterInterface [label="Vector presenter\ninterface", href="@ref Kompas::Core::AbstractVectorPresenter"];

        node [shape=circle, style=filled, color="#cc9900", fillcolor="#ffff66", fontcolor="#996600", fixedsize=true, width=0.75, height=0.75];
        vectorPresenterPlugin [label="Vector\npresenter\nplugin"];

        edge [style=solid, color="#cc9900"];
        vectorPresenterInterface -> vectorPresenterPlugin;
    }

    // Application hierarchy

    edge [color="#000000"];
    mainWindow -> toolInterface;
    mainWindow -> configuration [weight=20];
    mapViewInterface -> dataDownloadThread [weight=20];
    dataDownloadThread -> cacheInterface [weight=20];
    dataDownloadThread -> configuration;
    cacheInterface -> configuration;
    toolPlugin -> mapViewInterface;
    toolPlugin -> dataDownloadThread;
    toolPlugin -> cacheInterface;
    toolPlugin -> configuration [weight=20];
    toolPlugin -> timeline;
    pluginModel -> qtPluginManager;
    qtPluginManager -> pluginManager;

    // One to more hierarchy

    edge [color="#999999"];
    mainWindow -> qtPluginManager;
    dataDownloadThread -> {rasterModelInterface vectorModelInterface};
    mapViewPlugin -> {rasterModelInterface vectorModelInterface projectionInterface celestialBodyInterface};
    mapViewInterface -> vectorPresenterInterface;
    toolPlugin -> {celestialBodyInterface projectionInterface rasterZoomModel rasterLayerModel rasterOverlayModel vectorLayerModel rasterModelInterface vectorModelInterface pluginModel qtPluginManager};
    rasterModelPlugin -> timeline;
    vectorModelPlugin -> timeline;
    mapViewPlugin -> timeline;

    // Plugin access

    edge [style=solid, color="#cc9900"];
    cacheInterface -> cachePlugin;
    mapViewInterface -> mapViewPlugin;
    vectorPresenterInterface -> vectorPresenterPlugin;
    toolInterface -> toolPlugin;

    // Inter-plugin dependencies

    edge [style=dashed, color="#ffcc00"];
    vectorModelPlugin -> vectorPresenterPlugin;
    mapViewPlugin -> vectorPresenterPlugin;
}
@enddot
*/
